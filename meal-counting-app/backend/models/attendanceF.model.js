const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const attendanceSchema = new Schema({
    breakfastVegMon:{ type: Boolean, required: true, default: false  },
    breakfastVegTue:{ type: Boolean, required: true, default: false },
    breakfastVegWed:{ type: Boolean, required: true, default: false  },
    breakfastVegThur:{ type: Boolean, required: true, default: false  },
    breakfastVegFri:{ type: Boolean, required: true, default: false},
    breakfastVegSat:{ type: Boolean, required: true, default: false  },
    breakfastVegSun:{ type: Boolean, required: true, default: false },
    breakfastNonVegMon:{ type: Boolean, required: true, default: false },
    breakfastNonVegTue:{ type: Boolean, required: true, default: false },
    breakfastNonVegWed:{ type: Boolean, required: true, default: false  },
    breakfastNonVegThur:{ type: Boolean, required: true, default: false },
    breakfastNonVegFri:{ type: Boolean, required: true, default: false },
    breakfastNonVegSat:{ type: Boolean, required: true, default: false },
    breakfastNonVegSun:{ type: Boolean, required: true, default: false },
    breakfastNoMealMon:{ type: Boolean, required: true, default: false },
    breakfastNoMealTue:{ type: Boolean, required: true, default: false },
    breakfastNoMealWed:{ type: Boolean, required: true, default: false  },
    breakfastNoMealThur:{ type: Boolean, required: true, default: false },
    breakfastNoMealFri:{ type: Boolean, required: true, default: false },
    breakfastNoMealSat:{ type: Boolean, required: true, default: false },
    breakfastNoMealSun:{ type: Boolean, required: true, default: false },
    lunchVegMon:{ type: Boolean, required: true, default: false },
    lunchVegTue:{ type: Boolean, required: true, default: false },
    lunchVegWed:{ type: Boolean, required: true, default: false },
    lunchVegThu:{ type: Boolean, required: true, default: false },
    lunchVegFri:{ type: Boolean, required: true, default: false },
    lunchVegSat:{ type: Boolean, required: true, default: false },
    lunchVegSun:{ type: Boolean, required: true, default: false },
    lunchNonVegMon:{ type: Boolean, required: true, default: false },
    lunchNonVegTue:{ type: Boolean, required: true, default: false },
    lunchNonVegWed:{ type: Boolean, required: true, default: false },
    lunchNonVegThu:{ type: Boolean, required: true, default: false },
    lunchNonVegFri:{ type: Boolean, required: true, default: false },
    lunchNonVegSat:{ type: Boolean, required: true, default: false },
    lunchNonVegSun:{ type: Boolean, required: true, default: false },
    lunchNoMealMon:{ type: Boolean, required: true, default: false },
    lunchNoMealTue:{ type: Boolean, required: true, default: false },
    lunchNoMealWed:{ type: Boolean, required: true, default: false },
    lunchNoMealThu:{ type: Boolean, required: true, default: false },
    lunchNoMealFri:{ type: Boolean, required: true, default: false },
    lunchNoMealSat:{ type: Boolean, required: true, default: false },
    lunchNoMealSun:{ type: Boolean, required: true, default: false },
    snacksVegMon:{ type: Boolean, required: true, default: false },
    snacksVegTue:{ type: Boolean, required: true, default: false },
    snacksVegWed:{ type: Boolean, required: true, default: false },
    snacksVegThu:{ type: Boolean, required: true, default: false},
    snacksVegFri:{ type: Boolean, required: true, default: false},
    snacksVegSat:{ type: Boolean, required: true, default: false},
    snacksVegSun:{ type: Boolean, required: true, default: false},
    snacksNonVegMon:{ type: Boolean, required: true, default: false },
    snacksNonVegTue:{ type: Boolean, required: true, default: false},
    snacksNonVegWed:{ type: Boolean, required: true, default: false },
    snacksNonVegThu:{ type: Boolean, required: true, default: false },
    snacksNonVegFri:{ type: Boolean, required: true, default: false },
    snacksNonVegSat:{ type: Boolean, required: true, default: false},
    snacksNonVegSun:{ type: Boolean, required: true, default: false},
    snacksNoMealMon:{ type: Boolean, required: true, default: false },
    snacksNoMealTue:{ type: Boolean, required: true, default: false },
    snacksNoMealWed:{ type: Boolean, required: true, default: false },
    snacksNoMealThu:{ type: Boolean, required: true, default: false},
    snacksNoMealFri:{ type: Boolean, required: true, default: false},
    snacksNoMealSat:{ type: Boolean, required: true, default: false},
    snacksNoMealSun:{ type: Boolean, required: true, default: false},
    dinnerVegMon:{ type: Boolean, required: true, default: false},
    dinnerVegTue:{ type: Boolean, required: true, default: false },
    dinnerVegWed:{ type: Boolean, required: true, default: false},
    dinnerVegThu:{ type: Boolean, required: true, default: false },
    dinnerVegFri:{ type: Boolean, required: true, default: false},
    dinnerVegSat:{ type: Boolean, required: true, default: false},
    dinnerVegSun:{ type: Boolean, required: true, default: false },
    dinnerNonVegMon:{ type: Boolean, required: true, default: false},
    dinnerNonVegTue:{ type: Boolean, required: true, default: false},
    dinnerNonVegWed:{type: Boolean, required: true, default: false},
    dinnerNonVegThu:{ type: Boolean, required: true, default: false},
    dinnerNonVegFri:{ type: Boolean, required: true, default: false},
    dinnerNonVegSat:{type: Boolean, required: true, default: false},
    dinnerNonVegSun:{ type: Boolean, required: true, default: false },
    dinnerNoMealMon:{ type: Boolean, required: true, default: false},
    dinnerNoMealTue:{ type: Boolean, required: true, default: false },
    dinnerNoMealWed:{ type: Boolean, required: true, default: false},
    dinnerNoMealThu:{ type: Boolean, required: true, default: false },
    dinnerNoMealFri:{ type: Boolean, required: true, default: false},
    dinnerNoMealSat:{ type: Boolean, required: true, default: false},
    dinnerNoMealSun:{ type: Boolean, required: true, default: false },
})
module.exports = attendance = mongoose.model('attendance', attendanceSchema);
    
